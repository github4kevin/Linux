version: "3"
#############
 # NETWORKS #
#############
networks:
  default:
    driver: bridge
#############
 # SERVICES #
#############    
services:
  # CONTAINER MANAGER
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    networks:
      - default
    restart: unless-stopped
    ports:
      - 9000:9000
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${SERVICES}/Portainer:/data
  # HOME FOR CONTAINERS
  heimdall:
    image: lscr.io/linuxserver/heimdall:latest
    container_name: heimdall
    networks:
      - default
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${SERVICES}/Heimdall:/config
  # CONTAINER LOGS
  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    networks:
      - default
    restart: unless-stopped
    ports:
      - 9999:8080
    environment:
      - DOZZLE_LEVEL=info
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  # PLEX MEDIA SERVER
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    networks:
      - default
    restart: unless-stopped
    ports:
      - 32400:32400
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - VERSION=docker
      - PLEX_CLAIM=${PLEXCLAIM}
    volumes:
      - /media/Movies:/movies
      - /media/Shows:/shows
      - /media/Plex:/plex
      - ${SERVICES}/Plex:/config
      - ${SERVICES}/Plex:/transcode
    devices:
      - /dev/dri:/dev/dri
  # JELLYFIN
  jellyfin:
    container_name: jellyfin
    image: lscr.io/linuxserver/jellyfin:latest
    networks:
      - default
    restart: unless-stopped
    ports:
      - 8096:8096
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - JELLYFIN_PublishedServerUrl=192.168.1.200
    volumes:
      - ${SERVICES}/jellyfin:/config
      - /media/Movies:/movies
      - /media/Shows:/shows
      - /media/Plex:/plex
  # AUDIOBOOK SHELF
  audiobookshelf:
    container_name: audiobookshelf
    image: ghcr.io/advplyr/audiobookshelf:latest
    networks:
      - default
    restart: unless-stopped
    ports:
      - 13378:80
    volumes:
      - /media/Plex/Audiobooks:/audiobooks
      - /media/Plex/Podcasts:/podcasts
      - ${SERVICES}/AudiobookShelf/Metadata:/metadata
      - ${SERVICES}/AudiobookShelf/Config:/config
  # Plex Meta Manager
  plex-meta-manager:
    image: meisnate12/plex-meta-manager:latest
    container_name: plex-meta-manager
    networks:
      - default
    restart: unless-stopped
    environment:
      - TZ=${TIMEZONE}
      - PMM_TIME=04:00
      - PMM_CONFIG=/config/config.yml
    volumes:
      - ${SERVICES}/PlexMetaManager:/config
  # PLEX STATISTICS (TAUTULLI)
  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    container_name: tautulli
    networks:
      - default
    restart: unless-stopped
    ports:
      - 8181:8181
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${SERVICES}/Tautulli:/config
  # PLEXTRAKT
  plextraktsync:
    image: twolaw/plextraktsync:latest
    container_name: plextraktsync
    networks:
      - default
    restart: on-failure:2
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${SERVICES}/PlexTrakt:/app/config
  # WIZARR
  wizarr:
    container_name: wizarr
    image: ghcr.io/wizarrrr/wizarr
    networks:
      - default
    restart: unless-stopped
    ports:
      - 5690:5690
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - APP_URL=https://192.168.1.200:5690
      - DISABLE_BUILTIN_AUTH=false #Set True When Using Other Auth Provider
    volumes:
      - ${SERVICES}/Wizarr:/data/database
  # WEBSERVER
  nginx:
    container_name: nginx
    image: nginx:latest
    networks:
      - default
    restart: unless-stopped
    ports:
      - 4000:80
      - 4001:443
    volumes:
      - ${SERVICES}/Nginx/vCard:/usr/share/nginx/html
  # VPN
  gluetun:
    image: qmcgaw/gluetun:latest
    container_name: gluetun
    restart: unless-stopped
    networks:
      - default
    cap_add:
      - NET_ADMIN
    ports:
      - 6881:6881
      - 6881:6881/udp
      - 8080:8080 # qBittorrent
      - 5055:5055 # Overseerr
      - 9696:9696 # Prowlarr
      - 8787:8787 # Readarr
      - 7878:7878 # Radarr
      - 8989:8989 # Sonarr
      - 6767:6767 # Bazarr
      - 8686:8686 # Lidarr
    environment:
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER}
      - VPN_TYPE=${VPN_TYPE}
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES}
      - SERVER_HOSTNAMES=${SERVER_HOSTNAMES}
      - TZ=${TIMEZONE}
    volumes:
      - ${SERVICES}/Gluetun:/gluetun
  # DOWNLOADER
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: "service:gluetun"
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - WEBUI_PORT=8080
    volumes:
      - ${SERVICES}/qBittorrent/vuetorrent:/vuetorrent
      - /media/Plex/Downloads/Incomplete:/incomplete
      - ${SERVICES}/qBittorrent:/config
      - ${DOWNLOADS}         
    depends_on:
      - gluetun
  # INDEXER
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    network_mode: "service:gluetun"
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${SERVICES}/Prowlarr:/config
    depends_on:
      - gluetun
  # MOVIES
  radarr:
    image: lscr.io/linuxserver/radarr:develop
    container_name: radarr
    network_mode: "service:gluetun"
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${SERVICES}/Radarr:/config
      - /media/Movies:/movies
      - /media/Plex:/plex
      - ${DOWNLOADS}
    depends_on:
      - gluetun
  # SHOWS
  sonarr:
    image: lscr.io/linuxserver/sonarr:develop
    container_name: sonarr
    network_mode: "service:gluetun"
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${SERVICES}/Sonarr:/config
      - /media/Shows:/shows
      - /media/Plex:/plex
      - ${DOWNLOADS}
    depends_on:
      - gluetun
  # MUSIC
  lidarr:
    image: lscr.io/linuxserver/lidarr:develop
    container_name: lidarr
    network_mode: "service:gluetun"
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${SERVICES}/Lidarr:/config
      - /media/Plex/Music/Lidarr:/music
      - ${DOWNLOADS}
    depends_on:
      - gluetun
  # AUDIOBOOKS & PODCASTS
  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    network_mode: "service:gluetun"
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${SERVICES}/Readarr:/config
      - /media/Plex/Audiobooks:/audiobooks
      - /media/Plex/Podcasts:/podcasts
      - ${DOWNLOADS}
    depends_on:
      - gluetun
  # REQUESTS
  overseerr:
    image: lscr.io/linuxserver/overseerr:develop
    container_name: overseerr
    network_mode: "service:gluetun"
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${SERVICES}/Overseerr:/config
    depends_on:
      - gluetun
  # SUBTITLES
  bazarr:
    image: lscr.io/linuxserver/bazarr:development
    container_name: bazarr
    network_mode: "service:gluetun"
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - /media/Movies:/movies
      - /media/Shows:/shows
      - /media/Plex:/plex
      - ${SERVICES}/Bazarr:/config
    depends_on:
      - gluetun